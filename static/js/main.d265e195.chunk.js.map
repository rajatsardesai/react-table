{"version":3,"sources":["components/Sidebar.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","list","width","fullList","border","borderBottom","Sidebar","props","classes","anchor","className","clsx","role","onClick","toggleDrawer","onKeyDown","List","ListItem","button","Box","display","flexDirection","selectedCountry","name","justifyContent","alignItems","my","src","process","flag","alt","height","capital","population","region","map","text","Fragment","Drawer","open","state","onClose","table","minWidth","cursor","App","useState","countriesData","setCountriesData","setSelectedCountry","React","right","setState","getCountriesWithAxios","a","axios","get","response","data","useEffect","event","type","key","Grid","container","item","xs","TableContainer","component","Paper","Table","aria-label","responsive","TableHead","TableRow","TableCell","align","TableBody","country","index","onClickCapture","data-heading","scope","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d265e195.chunk.js","sourcesContent":["import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    list: {\r\n        width: 450,\r\n    },\r\n    fullList: {\r\n        width: 'auto',\r\n    },\r\n    width: {\r\n        width: '100%'\r\n    },\r\n    border: {\r\n        borderBottom: '0.5px solid #ccc',\r\n        width: '100%'\r\n    }\r\n}));\r\n\r\nconst Sidebar = (props) => {\r\n    const classes = useStyles();\r\n\r\n    const list = (anchor) => (\r\n        <div\r\n            className={clsx(classes.list, {\r\n                [classes.fullList]: anchor === 'top' || anchor === 'bottom',\r\n            })}\r\n            role=\"presentation\"\r\n            onClick={props.toggleDrawer(anchor, false)}\r\n            onKeyDown={props.toggleDrawer(anchor, false)}\r\n        >\r\n            <List>\r\n                <ListItem button>\r\n                    <Box display=\"flex\" flexDirection=\"column\" className={classes.width}>\r\n                        <h1>{props.selectedCountry.name}</h1>\r\n                        <hr className={classes.border} />\r\n                        <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"space-between\" alignItems=\"center\" my=\"1rem\">\r\n                            <h2>Flag</h2>\r\n                            <img src={process.env.PUBLIC_URL + props.selectedCountry.flag} alt=\"Flag\" height=\"32px\" />\r\n                        </Box>\r\n                        {\r\n                            [['Capital', props.selectedCountry.capital], ['Population', props.selectedCountry.population], ['Region', props.selectedCountry.region]].map((text) => {\r\n                                return (\r\n                                    <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"space-between\" alignItems=\"center\" my=\"1rem\">\r\n                                        <h2>{text[0]}</h2>\r\n                                        <p>{text[1]} </p>\r\n                                    </Box>\r\n                                )\r\n                            })\r\n                        }\r\n                    </Box>\r\n                </ListItem>\r\n            </List>\r\n        </div>\r\n    );\r\n\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                {['right'].map((anchor) => (\r\n                    <React.Fragment key={anchor}>\r\n                        <Drawer anchor={anchor} open={props.state[anchor]} onClose={props.toggleDrawer(anchor, false)}>\r\n                            {list(anchor)}\r\n                        </Drawer>\r\n                    </React.Fragment>\r\n                ))}\r\n            </div>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport Sidebar from \"./components/Sidebar\";\n\nconst countriesURL = \"https://restcountries.eu/rest/v2/all\";\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n  cursor: {\n    cursor: \"pointer\",\n    border: \"1px solid #000\"\n  }\n});\n\nfunction App() {\n  const [countriesData, setCountriesData] = useState([]);\n  const [selectedCountry, setSelectedCountry] = useState([]);\n\n  const [state, setState] = React.useState({\n    right: false,\n  });\n\n  const classes = useStyles();\n\n  const getCountriesWithAxios = async () => {\n    const response = await axios.get(countriesURL);\n    setCountriesData(response.data);\n    setCountriesData(response.data);\n  };\n\n  useEffect(() => {\n    getCountriesWithAxios();\n  }, []);\n\n  const selectedData = (data) => {\n    setSelectedCountry(data);\n  }\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n    setState({ ...state, [anchor]: open });\n  };\n\n  return (\n    <>\n      <Grid container>\n        <Grid item xs={12}>\n          <TableContainer component={Paper}>\n            <Table aria-label=\"simple table\" responsive=\"sm\">\n              <TableHead className=\"thead\">\n                <TableRow>\n                  <TableCell>\n                    <strong>Name</strong>\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <strong>Flag</strong>\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <strong>Capital</strong>\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <strong>Population</strong>\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <strong>Region</strong>\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {countriesData.map((country, index) => (\n                  ['right'].map((anchor) =>\n                    <TableRow onClick={() => selectedData(country)} onClickCapture={toggleDrawer(anchor, true)} className={classes.cursor} key={index}>\n                      <TableCell component=\"th\" data-heading=\"Name\" className=\"td\" scope=\"row\">{country.name}</TableCell>\n                      <TableCell align=\"right\" data-heading=\"Flag\" className=\"td\">\n                        <img src={process.env.PUBLIC_URL + country.flag} alt=\"Flag\" width=\"32px\" />\n                      </TableCell>\n                      <TableCell align=\"right\" data-heading=\"Capital\" className=\"td\">\n                        {country.capital}\n                      </TableCell>\n                      <TableCell align=\"right\" data-heading=\"Population\" className=\"td\">{country.population}</TableCell>\n                      <TableCell align=\"right\" data-heading=\"Region\" className=\"td\">{country.region}</TableCell>\n                    </TableRow>\n                  )))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n      </Grid>\n\n      <Sidebar toggleDrawer={toggleDrawer} state={state} selectedCountry={selectedCountry} />\n\n    </>\n  );\n\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}